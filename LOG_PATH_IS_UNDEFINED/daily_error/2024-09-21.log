2024-09-21 12:53:39 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:5001/api/text": Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:589)
	at java.base/sun.nio.ch.Net.connect(Net.java:578)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:583)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at java.base/java.net.Socket.connect(Socket.java:686)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:183)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:531)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:636)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:280)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:386)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:408)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1304)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1123)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1052)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.example.demo.service.RecommendedService.sendQuestionToFlask(RecommendedService.java:45)
	at com.example.demo.controller.UsrRecommendedController.askQuestion(UsrRecommendedController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-09-21 12:54:22 [ERROR] o.a.c.c.C.[.[localhost].[/].[jsp] - Servlet.service() for servlet [jsp] threw exception
java.lang.NumberFormatException: For input string: "info"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:662)
	at java.base/java.lang.Integer.parseInt(Integer.java:778)
	at jakarta.el.ListELResolver.coerce(ListELResolver.java:155)
	at jakarta.el.ListELResolver.getValue(ListELResolver.java:74)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.user.recommended.travelAnswer_jsp._jspService(travelAnswer_jsp.java:614)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-09-21 12:54:22 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [java.lang.NumberFormatException: For input string: "info"] with root cause
java.lang.NumberFormatException: For input string: "info"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:662)
	at java.base/java.lang.Integer.parseInt(Integer.java:778)
	at jakarta.el.ListELResolver.coerce(ListELResolver.java:155)
	at jakarta.el.ListELResolver.getValue(ListELResolver.java:74)
	at org.apache.jasper.el.JasperELResolver.getValue(JasperELResolver.java:130)
	at org.apache.el.parser.AstValue.getValue(AstValue.java:169)
	at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:170)
	at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:701)
	at org.apache.jsp.WEB_002dINF.jsp.user.recommended.travelAnswer_jsp._jspService(travelAnswer_jsp.java:614)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:67)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:456)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:377)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:325)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:408)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:314)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1432)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1168)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-09-21 15:44:12 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:5001/api/text": Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.base/sun.nio.ch.Net.connect0(Native Method)
	at java.base/sun.nio.ch.Net.connect(Net.java:589)
	at java.base/sun.nio.ch.Net.connect(Net.java:578)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:583)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at java.base/java.net.Socket.connect(Socket.java:686)
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:183)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:531)
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:636)
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:280)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:386)
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:408)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1304)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1237)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1123)
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1052)
	at org.springframework.http.client.SimpleClientHttpRequest.executeInternal(SimpleClientHttpRequest.java:79)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.example.demo.service.RecommendedService.sendQuestionToFlask(RecommendedService.java:45)
	at com.example.demo.controller.UsrRecommendedController.askQuestion(UsrRecommendedController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-09-21 15:46:57 [ERROR] o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "e5zdzGn8AsyJ9AqHLLTT";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>APIRemovedInV1</h1><EOL><div class="detail"><EOL>  <p class="errormsg">openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2524415800608"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1498</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)<EOL><span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524415800896"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1476</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)<EOL><span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524415802624"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py"</cite>,<EOL>      line <em class="line">194</em>,<EOL>      in <code class="function">wrapped_function</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre><EOL><pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre><EOL><pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre><EOL><pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre><EOL><pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL><span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">                </span>return wrapped_function</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre><EOL><pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre><EOL><pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524415803200"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1473</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()<EOL><span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950336"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">882</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)<EOL><span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950480"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py"</cite>,<EOL>      line <em class="line">194</em>,<EOL>      in <code class="function">wrapped_function</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre><EOL><pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre><EOL><pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre><EOL><pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre><EOL><pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL><span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">                </span>return wrapped_function</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre><EOL><pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre><EOL><pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950624"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">880</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()<EOL><span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950768"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">865</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL><span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950912"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\app.py"</cite>,<EOL>      line <em class="line">28</em>,<EOL>      in <code class="function">TextMassageMaker</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>time = input_data.get(&#34;time&#34;, &#34;No time provided&#34;)</pre><EOL><pre class="line before"><span class="ws">    </span>style = input_data.get(&#34;style&#34;, &#34;No style provided&#34;)</pre><EOL><pre class="line before"><span class="ws">    </span>region = input_data.get(&#34;region&#34;, &#34;No region provided&#34;)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># 최신 ChatCompletion API 호출</pre><EOL><pre class="line current"><span class="ws">    </span>response = openai.ChatCompletion.create(<EOL><span class="ws">    </span>           </pre><EOL><pre class="line after"><span class="ws">         </span>model=&#34;gpt-3.5-turbo&#34;,</pre><EOL><pre class="line after"><span class="ws">         </span>messages=[</pre><EOL><pre class="line after"><span class="ws">            </span>{&#34;role&#34;: &#34;system&#34;, &#34;content&#34;: &#34;너는 한국 여행 전문 플래너야. 네가 할 일은 사용자가 원하는 지역에 대한 맞춤형 여행지를 추천하고 그에 관한 소개를 해주는 것이야.&#34;},</pre><EOL><pre class="line after"><span class="ws">            </span>{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;여행 일정을 계획하고 싶어. &#34;},</pre><EOL><pre class="line after"><span class="ws">            </span>{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: f&#34;여행은 {who} 가고, 여행 기간은 {how}, 선호하는 일정은 {time}, 여행 스타일은 {style}, 선호하는 지역은 {region} 이야.&#34;},</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416951200"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\openai\lib\_old_api.py"</cite>,<EOL>      line <em class="line">39</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span># we don&#39;t break people that are just checking the attributes</pre><EOL><pre class="line before"><span class="ws">        </span># of a module</pre><EOL><pre class="line before"><span class="ws">        </span>return self</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def __call__(self, *_args: Any, **_kwargs: Any) -&gt; Any:</pre><EOL><pre class="line current"><span class="ws">        </span>raise APIRemovedInV1(symbol=self._symbol)<EOL><span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws"></span>SYMBOLS = [</pre><EOL><pre class="line after"><span class="ws">    </span>&#34;Edit&#34;,</pre><EOL><pre class="line after"><span class="ws">    </span>&#34;File&#34;,</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 1498, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 1476, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 1473, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 882, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 880, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 865, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\app.py&#34;, line 28, in TextMassageMaker<EOL>    response = openai.ChatCompletion.create(<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\openai\lib\_old_api.py&#34;, line 39, in __call__<EOL>    raise APIRemovedInV1(symbol=self._symbol)<EOL>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 1498, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 1476, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 1473, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 882, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 880, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 865, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\app.py", line 28, in TextMassageMaker<EOL>    response = openai.ChatCompletion.create(<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\openai\lib\_old_api.py", line 39, in __call__<EOL>    raise APIRemovedInV1(symbol=self._symbol)<EOL>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL><EOL><EOL>--><EOL>"] with root cause
org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!doctype html><EOL><html lang=en><EOL>  <head><EOL>    <title>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL> // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script><EOL>      var CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "e5zdzGn8AsyJ9AqHLLTT";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>APIRemovedInV1</h1><EOL><div class="detail"><EOL>  <p class="errormsg">openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL></p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2524415800608"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1498</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)<EOL><span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524415800896"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1476</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)<EOL><span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524415802624"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py"</cite>,<EOL>      line <em class="line">194</em>,<EOL>      in <code class="function">wrapped_function</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre><EOL><pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre><EOL><pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre><EOL><pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre><EOL><pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL><span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">                </span>return wrapped_function</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre><EOL><pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre><EOL><pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524415803200"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1473</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()<EOL><span class="ws">                </span>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950336"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">882</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)<EOL><span class="ws">            </span>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950480"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py"</cite>,<EOL>      line <em class="line">194</em>,<EOL>      in <code class="function">wrapped_function</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span># Wrap exception handlers with cross_origin</pre><EOL><pre class="line before"><span class="ws">        </span># These error handlers will still respect the behavior of the route</pre><EOL><pre class="line before"><span class="ws">        </span>if options.get(&#39;intercept_exceptions&#39;, True):</pre><EOL><pre class="line before"><span class="ws">            </span>def _after_request_decorator(f):</pre><EOL><pre class="line before"><span class="ws">                </span>def wrapped_function(*args, **kwargs):</pre><EOL><pre class="line current"><span class="ws">                    </span>return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL><span class="ws">                    </span>                                            ^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">                </span>return wrapped_function</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>if hasattr(app, &#39;handle_exception&#39;):</pre><EOL><pre class="line after"><span class="ws">                </span>app.handle_exception = _after_request_decorator(</pre><EOL><pre class="line after"><span class="ws">                    </span>app.handle_exception)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950624"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">880</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()<EOL><span class="ws">                </span>     ^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950768"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">865</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL><span class="ws">        </span>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416950912"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\app.py"</cite>,<EOL>      line <em class="line">28</em>,<EOL>      in <code class="function">TextMassageMaker</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>time = input_data.get(&#34;time&#34;, &#34;No time provided&#34;)</pre><EOL><pre class="line before"><span class="ws">    </span>style = input_data.get(&#34;style&#34;, &#34;No style provided&#34;)</pre><EOL><pre class="line before"><span class="ws">    </span>region = input_data.get(&#34;region&#34;, &#34;No region provided&#34;)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># 최신 ChatCompletion API 호출</pre><EOL><pre class="line current"><span class="ws">    </span>response = openai.ChatCompletion.create(<EOL><span class="ws">    </span>           </pre><EOL><pre class="line after"><span class="ws">         </span>model=&#34;gpt-3.5-turbo&#34;,</pre><EOL><pre class="line after"><span class="ws">         </span>messages=[</pre><EOL><pre class="line after"><span class="ws">            </span>{&#34;role&#34;: &#34;system&#34;, &#34;content&#34;: &#34;너는 한국 여행 전문 플래너야. 네가 할 일은 사용자가 원하는 지역에 대한 맞춤형 여행지를 추천하고 그에 관한 소개를 해주는 것이야.&#34;},</pre><EOL><pre class="line after"><span class="ws">            </span>{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;여행 일정을 계획하고 싶어. &#34;},</pre><EOL><pre class="line after"><span class="ws">            </span>{&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: f&#34;여행은 {who} 가고, 여행 기간은 {how}, 선호하는 일정은 {time}, 여행 스타일은 {style}, 선호하는 지역은 {region} 이야.&#34;},</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2524416951200"><EOL>  <h4>File <cite class="filename">"C:\dev\python\hello\env\Lib\site-packages\openai\lib\_old_api.py"</cite>,<EOL>      line <em class="line">39</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source library"><pre class="line before"><span class="ws">        </span># we don&#39;t break people that are just checking the attributes</pre><EOL><pre class="line before"><span class="ws">        </span># of a module</pre><EOL><pre class="line before"><span class="ws">        </span>return self</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def __call__(self, *_args: Any, **_kwargs: Any) -&gt; Any:</pre><EOL><pre class="line current"><span class="ws">        </span>raise APIRemovedInV1(symbol=self._symbol)<EOL><span class="ws">        </span>^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws"></span>SYMBOLS = [</pre><EOL><pre class="line after"><span class="ws">    </span>&#34;Edit&#34;,</pre><EOL><pre class="line after"><span class="ws">    </span>&#34;File&#34;,</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL></blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 1498, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 1476, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 1473, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 882, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py&#34;, line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 880, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\flask\app.py&#34;, line 865, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\app.py&#34;, line 28, in TextMassageMaker<EOL>    response = openai.ChatCompletion.create(<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File &#34;C:\dev\python\hello\env\Lib\site-packages\openai\lib\_old_api.py&#34;, line 39, in __call__<EOL>    raise APIRemovedInV1(symbol=self._symbol)<EOL>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai&gt;=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL></textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 1498, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 1476, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 1473, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 882, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask_cors\extension.py", line 194, in wrapped_function<EOL>    return cors_after_request(app.make_response(f(*args, **kwargs)))<EOL>                                                ^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 880, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>         ^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\flask\app.py", line 865, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]<EOL>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\app.py", line 28, in TextMassageMaker<EOL>    response = openai.ChatCompletion.create(<EOL>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^<EOL>  File "C:\dev\python\hello\env\Lib\site-packages\openai\lib\_old_api.py", line 39, in __call__<EOL>    raise APIRemovedInV1(symbol=self._symbol)<EOL>openai.lib._old_api.APIRemovedInV1: <EOL><EOL>You tried to access openai.ChatCompletion, but this is no longer supported in openai>=1.0.0 - see the README at https://github.com/openai/openai-python for the API.<EOL><EOL>You can run `openai migrate` to automatically upgrade your codebase to use the 1.0.0 interface. <EOL><EOL>Alternatively, you can pin your installation to the old version, e.g. `pip install openai==0.28`<EOL><EOL>A detailed migration guide is available here: https://github.com/openai/openai-python/discussions/742<EOL><EOL><EOL><EOL>--><EOL>"
	at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:102)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:186)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.example.demo.service.RecommendedService.sendQuestionToFlask(RecommendedService.java:45)
	at com.example.demo.controller.UsrRecommendedController.askQuestion(UsrRecommendedController.java:32)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
