<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<!-- lodash debounce -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"></script>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		document.querySelector('.nav-signup-button').addEventListener(
				'click',
				function() {
					document.querySelector('.signup-popup').classList
							.remove('hidden');
					document.querySelector('.popup-bg').classList
							.remove('hidden');
				});

		document.querySelector('.signup-popup .close-popup')
				.addEventListener(
						'click',
						function() {
							document.querySelector('.signup-popup').classList
									.add('hidden');
							document.querySelector('.popup-bg').classList
									.add('hidden');
							
							// 폼 필드 초기화
							const formStep1 = document.forms['step1'];
							formStep1.reset();
							const formStep2 = document.forms['step2'];
							formStep2.reset();
							
							// hidden 필드 초기화
					        document.getElementById('hiddenLoginId').value = '';
					        document.getElementById('hiddenLoginPw').value = '';

					        // 유효성 검사 메시지 초기화
					        document.getElementById('loginIdCheck').innerHTML = '';
					        document.getElementById('loginPwCheck').innerHTML = '';
					        document.getElementById('loginPwChk').innerHTML = '';
						});

		document.querySelectorAll('.popup-container').forEach(
				function(container) {
					container.addEventListener('click', function(event) {
						event.stopPropagation();
					});
				});

		document.getElementById('next-step')
				.addEventListener(
						'click',
						function() {
							document.getElementById('step1').classList
									.add('hidden');

							document.getElementById('step2').classList
									.remove('hidden');
						});

		document.getElementById('prev-step')
				.addEventListener(
						'click',
						function() {
							document.getElementById('step2').classList
									.add('hidden');

							document.getElementById('step1').classList
									.remove('hidden');
						});
	});
</script>

<!-- 회원가입 -->
<script>
	let validLoginId = "";
	let loginId = '';
	let loginPw = '';
	let loginPwConfirm = '';

	// 다음 버튼 클릭 시, 아이디와 비밀번호를 step 2에 넘김
	document.addEventListener('DOMContentLoaded', function() {
		const nextStepButton = document.getElementById('next-step');

		if (nextStepButton) { // 요소가 존재하는지 확인
			nextStepButton.addEventListener('click', function(event) {

				// 기본 동작을 막아야 form이 submit되지 않고 다음으로 넘어가는 것을 방지
				event.preventDefault();
				// 입력된 값을 가져옴
				loginId = document.getElementById('loginId').value.trim();
				loginPw = document.getElementById('loginPw').value.trim();

				const loginPwConfirm = document
						.getElementById('loginPwConfirm').value.trim();

				// 아이디 유효성 검사
				if (loginId.length === 0) {
					alert('아이디를 입력해주세요');
					return;
				}
				
				if(!validLoginId){
					alert('유효한 아이디를 입력해주세요');
					return;
				}
				
				// 비밀번호 유효성 검사
				if (loginPw.length === 0) {
					alert('비밀번호를 입력해주세요');
					return;
				}
				if (loginPwConfirm.length === 0) {
					alert('비밀번호 확인을 입력해주세요');
					return;
				}
				if (loginPw !== loginPwConfirm) {
					alert('비밀번호가 일치하지 않습니다.');
					document.getElementById('loginPw').focus();
					return;
				}

				/* step2에 loginId, loginPw 넘길 수 있도록 step1에서 입력한 값 설정 */
				document.getElementById('hiddenLoginId').value = loginId;
				document.getElementById('hiddenLoginPw').value = loginPw;
				
				// step2로 넘어감 ()
				document.getElementById('step1').classList.add('hidden');
				document.getElementById('step2').classList.remove('hidden');

			});
		} else {
			console.error("next-step 버튼을 찾을 수 없습니다.");
		}
	});
	// 회원가입 제출 폼
	function JoinForm__submit(form) {
		form.name.value = form.name.value.trim();
		if (form.name.value.length === 0) {
			alert('이름을 입력해주세요');
			return;
		}
		form.nickname.value = form.nickname.value.trim();
		if (form.nickname.value.length === 0) {
			alert('닉네임을 입력해주세요');
			return;
		}
		form.email.value = form.email.value.trim();
		if (form.email.value.length === 0) {
			alert('이메일을 입력해주세요');
			return;
		}
		form.cellphoneNum.value = form.cellphoneNum.value.trim();
		if (form.cellphoneNum.value.length === 0) {
			alert('전화번호를 입력해주세요');
			return;
		}
		form.submit();
	}
</script>

<!--실시간 아이디 검사 -->
<script>
	function checkLoginId() {
		let loginId = $('#loginId').val().trim();

		// 아이디 유효성 검사
		if (loginId.length < 6) {
			$('#loginIdCheck').html('아이디는 6자 이상이어야 합니다').css('color', 'red');
			validLoginId = false;
			return;
		} else if (loginId.length >= 20) {
			$('#loginIdCheck').html('아이디는 20자 이하이어야 합니다').css('color', 'red');
			validLoginId = false;
			return;
		}

		// AJAX로 아이디 중복 확인
		$.ajax({
			url : '../member/getLoginIdDup',
			type : 'post',
			data : {
				loginId : loginId
			},
			success : function(data) {
				if (data == -1) {
					$('#loginIdCheck').html('아이디를 입력해주세요').css('color', 'red');
					validLoginId = false;
				} else if (data == 1) {
					$('#loginIdCheck').html('사용 가능한 아이디입니다').css('color',
							'green');
					validLoginId = true;
				} else if (data == -2) {
					$('#loginIdCheck').html('이미 사용중인 아이디입니다').css('color',
							'red');
					validLoginId = false;
				}
			},
			error : function(xhr, status, error) {
				console.error('Error occurred: ' + error);
				$('#loginIdCheck').html('서버와 통신 중 오류가 발생했습니다.').css('color',
						'red');
				validLoginId = false;
			}
		});
	}

	// lodash의 debounce 적용, 500ms 동안 입력이 없으면 checkLoginId 함수 실행
	const debouncedCheckLoginId = _.debounce(checkLoginId, 300);

	$(document).ready(function() {
		$('#loginId').on('keyup', debouncedCheckLoginId);
	});
</script>

<!-- 실시간 비밀번호 검사 -->
<script>
	function checkLoginPw() {
		let loginPw = $('#loginPw').val().trim();

		// 비밀번호 정규식 검사: 8~20자 사이, 알파벳, 숫자, 특수문자 포함
		let check_pw = /^(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&()\-_=+]).{8,20}$/;

		// 비밀번호가 비었는지 먼저 확인
		if (loginPw.length === 0) {
			$('#loginPwCheck').text('비밀번호를 입력해주세요').css('color', 'red');
			return;
		}

		// 비밀번호 길이 유효성 검사 (8자 이상, 20자 이하)
		if (loginPw.length < 8) {
			$('#loginPwCheck').text('비밀번호는 8자 이상이어야 합니다').css('color', 'red');
			return;
		} else if (loginPw.length > 20) {
			$('#loginPwCheck').text('비밀번호는 20자 이하이어야 합니다').css('color', 'red');
			return;
		}

		// 정규식 검사: 알파벳, 숫자, 특수문자 포함 여부
		if (!check_pw.test(loginPw)) {
			$('#loginPwCheck').text('비밀번호는 알파벳, 숫자, 특수문자를 포함해야 합니다').css(
					'color', 'red');
		} else {
			$('#loginPwCheck').text('사용 가능한 비밀번호입니다').css('color', 'green');
		}
	}
</script>

<!-- 실시간 비밀번호 확인 -->
<script>
	function loginPwCheck() {
		loginPwConfirm = $('#loginPwConfirm').val().trim();
		if ($('#loginPw').val() == '' || $('#loginPwConfirm').val() == '') {
			$('#loginPwChk').text('비밀번호를 입력해주세요.').css('color', 'red')

		} else if ($('#loginPw').val() == $('#loginPwConfirm').val()) {
			$('#loginPwChk').text('비밀번호 일치').css('color', 'green')

		} else {
			$('#loginPwChk').text('비밀번호 불일치').css('color', 'red')
		}
	}
</script>
</head>
<body>
	<!-- 회원가입 팝업 -->
	<div class="popup-bg fixed inset-0 bg-black bg-opacity-70 hidden z-40"></div>
	<div class="signup-popup fixed inset-0 flex items-center justify-center hidden z-50">
		<div class="popup-container w-[450px] h-[500px] p-8 bg-white rounded-lg shadow-lg relative">
			<div class="popup-header flex justify-end">
				<button class="close-popup text-3xl font-bold">×</button>
			</div>
			<h2 class="text-center font-bold text-2xl mb-8">SIGNUP</h2>


			<form name="step1" id="step1" class="input-container w-full flex flex-col items-center">
				<label class="block text-left font-bold text-lg w-full mb-1">아이디</label>
				<input onkeyup="checkLoginIdDupDebounced(this);" type="text" id="loginId" name="loginId"
					class="input-field w-full h-[40px] px-4 border rounded-md mb-2" autocomplete="off" placeholder="아이디 입력해주세요(6~20자)" />
				<div id="loginIdCheck" class="text-xs w-full mb-4"></div>

				<label class="block text-left font-bold text-lg w-full mb-1">비밀번호</label>
				<input type="password" id="loginPw" name="loginPw" class="input-field w-full h-[40px] px-4 border rounded-md mb-2" oninput="checkLoginPw()"
					autocomplete="off" placeholder="비밀번호 입력해주세요 (문자, 숫자, 특수문자 포함 8~20자)" />
				<div id="loginPwCheck" class="text-xs w-full mb-4"></div>


				<label class="block text-left font-bold text-lg w-full mb-1">비밀번호 확인</label>
				<input type="password" id="loginPwConfirm" name="loginPwConfirm" class="input-field w-full h-[40px] px-4 border rounded-md mb-2"
					oninput="loginPwCheck()" autocomplete="off" placeholder="비밀번호를 다시 입력해주세요" />
				<div id="loginPwChk" class="text-red-500 text-xs w-full mb-4"></div>
				<div class="flex justify-end w-full gap-2">
					<button type="button" id="next-step" class="popup-login-button next-button text-black font-semibold rounded-md">다음</button>
				</div>
			</form>


			<form name="step2" id="step2" class="input-container w-full flex flex-col items-center hidden" action="../member/doSignUp" method="POST"
				onsubmit="JoinForm__submit(this); return false;">

				<!-- hidden 필드를 통해서 이전 단계에서 받은 loginId와 loginPw를 서버로 전송 -->
				<input type="hidden" id="hiddenLoginId" name="loginId" />
				<input type="hidden" id="hiddenLoginPw" name="loginPw" />
				<label class="block text-left font-bold text-lg w-full mb-1">이름</label>
				<input type="text" name="name" class="input-field w-full h-[40px] px-4 border rounded-md mb-4" autocomplete="off" placeholder="이름을 입력해주세요" />

				<label class="block text-left font-bold text-lg w-full mb-1">닉네임</label>
				<input type="text" name="nickname" class="input-field w-full h-[40px] px-4 border rounded-md mb-4" autocomplete="off" placeholder="닉네임을 입력해주세요" />

				<label class="block text-left font-bold text-lg w-full mb-1">전화번호</label>
				<input type="text" name="cellphoneNum" class="input-field w-full h-[40px] px-4 border rounded-md mb-4" autocomplete="off"
					placeholder="전화번호를 입력해주세요('-'제외)" />

				<label class="block text-left font-bold text-lg w-full mb-1">이메일</label>
				<input type="email" name="email" class="input-field w-full h-[40px] px-4 border rounded-md mb-4" autocomplete="off" placeholder="이메일을 입력해주세요." />


				<div class="flex justify-end w-full gap-2">
					<button type="button" id="prev-step" class="prev-button text-black font-semibold rounded-md">이전</button>

					<button type="submit" class="popup-login-button font-semibold hover:bg-blue-700 rounded-md">가입하기</button>
				</div>

			</form>
		</div>
	</div>

</body>
</html>